// Layers:
// Definition by order of specificity (the last layer to be specified overrides the ones specified earlier)
@layer framework,
base,
utilities,
components;

@layer components {
    @layer footer,
    icons,
    buttons;
}

// ...
// Font import
@import './assets/styles/mixins';


@layer framework {
    @import '../node_modules/bootstrap/scss/bootstrap';
}

// layer(framework);

@import './assets/styles/global';


$sm: map-get($breakpoints, screen-sm);
$md: map-get($breakpoints, screen-md);
$lg: map-get($breakpoints, screen-lg);
$xl: map-get($breakpoints, screen-xl);




@layer base {
    html,
    body {
        height: 100%;
    }

    html {
        // font-size: 1rem;
        font-size: clamp(1rem, 0.75rem + 1vw, 1.5rem);
    }

    body {
        margin: 0;
        @include setFontFamily('body');
        // older browsers that donâ€™t understand webfont will simply ignore it
        font-display: swap;
        @include color(primary_dark1);
        @include set-app-background-color();
    }
}





// Typography
// -------------------------
@layer base {

    h1,
    h2,
    h3,
    h4 {
        @include setFontFamily('heading');
    }


    h1 {
        @include typo-h1();
    }

    h2 {
        @include typo-h2('small');

        @include respond-to($md) {
            // <= md ...
            @include typo-h2('small');
        }

        @include respond-to($lg) {
            // <= lg
            @include typo-h2('medium');
        }

        @include respond-to($xl) {
            // <= lg
            @include typo-h2('large');
        }
    }

    h3 {
        // border: 3px solid;
        @include typo-h3('small');

        @include respond-to($md) {
            border: 3px solid red;
            @include typo-h3('small');
        }

        @include respond-to($lg) {
            // <= lg
            border: 3px solid greenyellow;
            @include typo-h3('medium');
        }

        @include respond-to($xl) {
            // <= lg
            border: 3px solid rgb(18, 179, 173);
            @include typo-h3('large');
        }
    }

    h4 {
        @include typo-h4('small');
    }


    .title-caption {
        text-transform: uppercase;
        @include rem(font-size, 13px);
    }
}



// Global helpers
// -------------------------
@layer utilities {
    .list-align-bullets-with-left-edge {
        padding-left: 0.9rem;
    }

    .bx-container {
        container-type: inline-size;
    }
}





// Pages
// -------------------------
@layer page {

    .page-section {
        @include gobalBottomSpacing(); // Vertical spacing with the next component
    }


    .page-section {
        @container (min-width: 1141px) {
            // Increase bottom spacing
            @include gobalBottomSpacing($spacer-xl);
        }

        @container (min-width: 961px) and (max-width: 1140px) {
            // Increase bottom spacing
            @include gobalBottomSpacing($spacer-lg);
        }

        @container (min-width: 721px) and (max-width: 960px) {
            // Increase bottom spacing
            @include gobalBottomSpacing($spacer-md);
        }
    }

}