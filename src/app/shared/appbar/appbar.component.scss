@import './../../../assets/styles/variables';
@import './../../../assets/styles/mixins';


$sm: map-get($breakpoints, screen-sm);

::host {
    display: block;
}

@layer components.appBar {

    .small {
        // Display small bar only between 0 and $sm ...
        display: none;
        @include before-to($sm) {
            display: block;
        }
        
        // the bar ...
        .mat-toolbar {
            @include bgColorImp(primary_gray4);
        }

        label {
            @include color(gray0);
        }

        // trigger button
        // .menu-icon {
            .mat-icon {
                // hamburger
                @include colorIm(primary_dark2);
            }
        // }

        // spacer between logo and trigger button
        .nav-spacer {
            flex: 1 1 auto;
        }
    }



    .large {
        // Only display large bar from ($sm + 1) up ...
        display: none;
        @include respond-to($sm + 1) {
            display: flex;
        }

        position: fixed;
        top: 0;
        width: 100%;
        height: map-get($gap, appBar);

        @include set-app-background-color();
        z-index: 3;

        //...
        a {
            text-decoration: none;
            font-weight: 600;
            @include color(dark1);
        }

        //...
        .menu {
            margin-left: auto;

            li:not(:last-child) {
                margin-right: 150px;
            }

            .menu-item-active {
                text-decoration: underline;
                @include color(state2);
            }

            a:hover {
                @include color(state1);
                text-decoration: underline;
            }

            a,
            button {
                padding: 20px;
            }
        }

        .btn-info {
            border-width: 0;
            background-color: transparent;
        }
    
        .menu.list-inline {
            margin-bottom: 0;
        }
    
        button[aria-expanded="true"] {
            @include bgColor(gray1);
            border-radius: map-get($border, radius);
        }
    }

}